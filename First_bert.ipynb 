{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "gpuType": "T4",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/tali9943/DEEP-LEARNING-FOR-NATURAL-LANGUAGE-PROCESSING/blob/main/First_bert.ipynb%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# First phase DATASET + BERT\n"
      ],
      "metadata": {
        "id": "_KhMDHWAInZk"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Load Dataset"
      ],
      "metadata": {
        "id": "dEGzHSnyWy4X"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# load google drive to see the files in google drive\n",
        "from google.colab import drive\n",
        "drive.mount('/content/drive')\n"
      ],
      "metadata": {
        "id": "I9DSKdiLIsPD",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1a74aa1a-df45-4d85-dc51-7016af8ba3d4"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Da modificare in base al proprio path su drive"
      ],
      "metadata": {
        "id": "XUzMVvgyXJlM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "train_csv_path = '/content/drive/MyDrive/Progetto-Vascon/Dataset/train.csv'\n",
        "test_csv_path = '/content/drive/MyDrive/Progetto-Vascon/Dataset/test.csv'\n",
        "test_labels_csv_path = '/content/drive/MyDrive/Progetto-Vascon/Dataset/test_labels.csv'"
      ],
      "metadata": {
        "id": "1dx9dHyTOpkL"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#function to load a csv file from a drive folder\n",
        "import pandas as pd\n",
        "\n",
        "def load_csv(path_csv):\n",
        "  path_file_csv = path_csv\n",
        "  df = pd.read_csv(path_file_csv)\n",
        "\n",
        "  return df"
      ],
      "metadata": {
        "id": "_zbN6pLbKbOX"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "test_df = load_csv(test_csv_path)"
      ],
      "metadata": {
        "id": "L57PlzqOOoNs"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "train_df = load_csv(train_csv_path)"
      ],
      "metadata": {
        "id": "-MhUmSoDODmb"
      },
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas\n",
        "#pandas.set_option('display.max_rows', None)\n",
        "\n",
        "#load the first n rows of the dataset\n",
        "def take_first_rows_dataframe(df, n_rows):\n",
        "    return df.head(n_rows)"
      ],
      "metadata": {
        "id": "YcfRUqM6OK10"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "train_df = take_first_rows_dataframe(train_df, 500)\n",
        "train_df"
      ],
      "metadata": {
        "id": "_B8-t0eMCOHt",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "a9a48aa6-9c30-4d97-a78f-6dd3c403139b"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   id                                       comment_text  \\\n",
              "0    0000997932d777bf  Explanation\\nWhy the edits made under my usern...   \n",
              "1    000103f0d9cfb60f  D'aww! He matches this background colour I'm s...   \n",
              "2    000113f07ec002fd  Hey man, I'm really not trying to edit war. It...   \n",
              "3    0001b41b1c6bb37e  \"\\nMore\\nI can't make any real suggestions on ...   \n",
              "4    0001d958c54c6e35  You, sir, are my hero. Any chance you remember...   \n",
              "..                ...                                                ...   \n",
              "495  014b44616d8cb457  Sarek of Vulcan: Unfortunately for you, you ca...   \n",
              "496  014bb932bd289352  Keep your chin up! Darwinism was not accepted ...   \n",
              "497  014c96f873db11ff  \"\"\"Nazi filth\"\" is impolite  04:27, 20 Jan 200...   \n",
              "498  014d00c8f2a76df4  Interesting. I checked the other case number K...   \n",
              "499  014f50b1f448cb2d  The transcluded part of the GA review doesn't ...   \n",
              "\n",
              "     toxic  severe_toxic  obscene  threat  insult  identity_hate  \n",
              "0        0             0        0       0       0              0  \n",
              "1        0             0        0       0       0              0  \n",
              "2        0             0        0       0       0              0  \n",
              "3        0             0        0       0       0              0  \n",
              "4        0             0        0       0       0              0  \n",
              "..     ...           ...      ...     ...     ...            ...  \n",
              "495      0             0        0       0       0              0  \n",
              "496      0             0        0       0       0              0  \n",
              "497      1             0        0       0       1              0  \n",
              "498      0             0        0       0       0              0  \n",
              "499      0             0        0       0       0              0  \n",
              "\n",
              "[500 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ca968c59-87da-42ef-b26a-3b99397da9aa\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>comment_text</th>\n",
              "      <th>toxic</th>\n",
              "      <th>severe_toxic</th>\n",
              "      <th>obscene</th>\n",
              "      <th>threat</th>\n",
              "      <th>insult</th>\n",
              "      <th>identity_hate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0000997932d777bf</td>\n",
              "      <td>Explanation\\nWhy the edits made under my usern...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>000103f0d9cfb60f</td>\n",
              "      <td>D'aww! He matches this background colour I'm s...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>000113f07ec002fd</td>\n",
              "      <td>Hey man, I'm really not trying to edit war. It...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0001b41b1c6bb37e</td>\n",
              "      <td>\"\\nMore\\nI can't make any real suggestions on ...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0001d958c54c6e35</td>\n",
              "      <td>You, sir, are my hero. Any chance you remember...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>495</th>\n",
              "      <td>014b44616d8cb457</td>\n",
              "      <td>Sarek of Vulcan: Unfortunately for you, you ca...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>496</th>\n",
              "      <td>014bb932bd289352</td>\n",
              "      <td>Keep your chin up! Darwinism was not accepted ...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>497</th>\n",
              "      <td>014c96f873db11ff</td>\n",
              "      <td>\"\"\"Nazi filth\"\" is impolite  04:27, 20 Jan 200...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>498</th>\n",
              "      <td>014d00c8f2a76df4</td>\n",
              "      <td>Interesting. I checked the other case number K...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>499</th>\n",
              "      <td>014f50b1f448cb2d</td>\n",
              "      <td>The transcluded part of the GA review doesn't ...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>500 rows × 8 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ca968c59-87da-42ef-b26a-3b99397da9aa')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ca968c59-87da-42ef-b26a-3b99397da9aa button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ca968c59-87da-42ef-b26a-3b99397da9aa');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e1aca5db-0d2f-41be-a1c7-20bec6eb347e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e1aca5db-0d2f-41be-a1c7-20bec6eb347e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e1aca5db-0d2f-41be-a1c7-20bec6eb347e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "train_df",
              "summary": "{\n  \"name\": \"train_df\",\n  \"rows\": 500,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 500,\n        \"samples\": [\n          \"00e729fdd5dbb85b\",\n          \"002c9cccf2f1d05b\",\n          \"00ef2984561935dc\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"comment_text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 500,\n        \"samples\": [\n          \"History? ==\\n\\nCan someone provide some information regarding the contracting of the AC service area? AC Transit used to serve most of the cities of the 680 corridor, but the cities basically kicked out AC Transit and now run their own services. Part of the reason was that AC Transit was under-serving the suburbs, while spending their money on underutilized services in the urban areas.  That history should be reflected in this article. '''''' (talk) \\n\\n==\",\n          \"\\\"\\n Ambiguous ? \\nSo Mabuska Irish can mean more than one thing ? I will qoute you on that .Thanks .  \\u2014 Preceding unsigned comment added by 109.77.58.139   \\nOf course it can. The word \\\"\\\"Irish\\\"\\\" wasn't invented on the establishment of the Irish Free State. Talk \\n\\nQuote me all you want, it depends on the context of the term when its being used as to whether its applicable or not. Note how i said citizenship and ethnicity - i never mentioned nationality which is the real key meaning. The nationality meaning of the term is the predominantly used form on Wikipedia. In nationality terms it refers to the Republic of Ireland. But you already know that i'm sure.  (talk) \\n\\n\\\"\\\"In nationality terms it refers to the Republic of Ireland\\\"\\\" no such country . so nationality terms it refers to Ireland .  \\u2014 Preceding unsigned comment added by 109.76.191.188   \\n\\nOh wow, Ireland as in Ireland the state (whose official description is the Republic of Ireland). Whats the point in this inane conversation.  (talk) \\n\\nIreland whose official name is Ireland .  \\u2014 Preceding unsigned comment added by 109.76.191.188   \\nhttp://www.constitution.ie/reports/ConstitutionofIreland.pdf reading for you . Also , I see http://www.constitution.ie/reports/mbunreachtnaheireann.pdf , as you speak both .  \\u2014 Preceding unsigned comment added by 109.78.224.50   \\\"\",\n          \"\\\"\\nOk, here it is, peer viewed for 12 months and published at Academic archive On-line (DiVA), \\non a permanent URI: urn:nbn:se:kau:diva-2790\\n\\n Wallin H. 2008, 129 p: An investigation of friction graphs ranking ability regarding the galling phenomenon in dry SOFS contact  (Adhesive material transfer and friction), A free pdf document available here or www.diva-portal.org found here or at www.uppsok.libris.kb.se here use search words:\\\"\\\"galling & Harald Wallin\\\"\\\" or the direct libris link here\\n\\n  \\n\\n\\\"\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"toxic\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"severe_toxic\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"obscene\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"threat\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"insult\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"identity_hate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "test_df = take_first_rows_dataframe(test_df, 20)\n",
        "test_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "RAWA7qOtCOiR",
        "outputId": "7fd7c675-b49a-424d-b851-937ac7d54bf1"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  id                                       comment_text\n",
              "0   00001cee341fdb12  Yo bitch Ja Rule is more succesful then you'll...\n",
              "1   0000247867823ef7  == From RfC == \\n\\n The title is fine as it is...\n",
              "2   00013b17ad220c46  \" \\n\\n == Sources == \\n\\n * Zawe Ashton on Lap...\n",
              "3   00017563c3f7919a  :If you have a look back at the source, the in...\n",
              "4   00017695ad8997eb          I don't anonymously edit articles at all.\n",
              "5   0001ea8717f6de06  Thank you for understanding. I think very high...\n",
              "6   00024115d4cbde0f  Please do not add nonsense to Wikipedia. Such ...\n",
              "7   000247e83dcc1211                   :Dear god this site is horrible.\n",
              "8   00025358d4737918  \" \\n Only a fool can believe in such numbers. ...\n",
              "9   00026d1092fe71cc  == Double Redirects == \\n\\n When fixing double...\n",
              "10  0002eadc3b301559  I think its crap that the link to roggenbier i...\n",
              "11  0002f87b16116a7f  \"::: Somebody will invariably try to add Relig...\n",
              "12  0003806b11932181  , 25 February 2010 (UTC) \\n\\n :::Looking it ov...\n",
              "13  0003e1cccfd5a40a  \" \\n\\n It says it right there that it IS a typ...\n",
              "14  00059ace3e3e9a53  \" \\n\\n == Before adding a new product to the l...\n",
              "15  000634272d0d44eb  ==Current Position== \\n Anyone have confirmati...\n",
              "16  000663aff0fffc80                           this other one from 1897\n",
              "17  000689dd34e20979  == Reason for banning throwing == \\n\\n This ar...\n",
              "18  000834769115370c  :: Wallamoose was changing the cited material ...\n",
              "19  000844b52dee5f3f             |blocked]] from editing Wikipedia.   |"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7d035c43-fbdd-4187-8c8b-6826de1bba90\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>comment_text</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>00001cee341fdb12</td>\n",
              "      <td>Yo bitch Ja Rule is more succesful then you'll...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0000247867823ef7</td>\n",
              "      <td>== From RfC == \\n\\n The title is fine as it is...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>00013b17ad220c46</td>\n",
              "      <td>\" \\n\\n == Sources == \\n\\n * Zawe Ashton on Lap...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>00017563c3f7919a</td>\n",
              "      <td>:If you have a look back at the source, the in...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>00017695ad8997eb</td>\n",
              "      <td>I don't anonymously edit articles at all.</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>0001ea8717f6de06</td>\n",
              "      <td>Thank you for understanding. I think very high...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>00024115d4cbde0f</td>\n",
              "      <td>Please do not add nonsense to Wikipedia. Such ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>000247e83dcc1211</td>\n",
              "      <td>:Dear god this site is horrible.</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>00025358d4737918</td>\n",
              "      <td>\" \\n Only a fool can believe in such numbers. ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>00026d1092fe71cc</td>\n",
              "      <td>== Double Redirects == \\n\\n When fixing double...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>0002eadc3b301559</td>\n",
              "      <td>I think its crap that the link to roggenbier i...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>0002f87b16116a7f</td>\n",
              "      <td>\"::: Somebody will invariably try to add Relig...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>0003806b11932181</td>\n",
              "      <td>, 25 February 2010 (UTC) \\n\\n :::Looking it ov...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>0003e1cccfd5a40a</td>\n",
              "      <td>\" \\n\\n It says it right there that it IS a typ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>00059ace3e3e9a53</td>\n",
              "      <td>\" \\n\\n == Before adding a new product to the l...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>000634272d0d44eb</td>\n",
              "      <td>==Current Position== \\n Anyone have confirmati...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>000663aff0fffc80</td>\n",
              "      <td>this other one from 1897</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>000689dd34e20979</td>\n",
              "      <td>== Reason for banning throwing == \\n\\n This ar...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>000834769115370c</td>\n",
              "      <td>:: Wallamoose was changing the cited material ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>000844b52dee5f3f</td>\n",
              "      <td>|blocked]] from editing Wikipedia.   |</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7d035c43-fbdd-4187-8c8b-6826de1bba90')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7d035c43-fbdd-4187-8c8b-6826de1bba90 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7d035c43-fbdd-4187-8c8b-6826de1bba90');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d7ce0b48-eae5-4294-95a0-bf4cc2359b05\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d7ce0b48-eae5-4294-95a0-bf4cc2359b05')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d7ce0b48-eae5-4294-95a0-bf4cc2359b05 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "test_df",
              "summary": "{\n  \"name\": \"test_df\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"00001cee341fdb12\",\n          \"000689dd34e20979\",\n          \"000634272d0d44eb\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"comment_text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Yo bitch Ja Rule is more succesful then you'll ever be whats up with you and hating you sad mofuckas...i should bitch slap ur pethedic white faces and get you to kiss my ass you guys sicken me. Ja rule is about pride in da music man. dont diss that shit on him. and nothin is wrong bein like tupac he was a brother too...fuckin white boys get things right next time.,\",\n          \"== Reason for banning throwing == \\n\\n This article needs a section on /why/ throwing is banned. At the moment, to a non-cricket fan, it seems kind of arbitrary.\",\n          \"==Current Position== \\n Anyone have confirmation that Sir, Alfred is no longer at the airport and is hospitalised?\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Stemming and Lemming"
      ],
      "metadata": {
        "id": "MHesEJ7eqXuM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "from nltk.stem import PorterStemmer\n",
        "from nltk.tokenize import word_tokenize\n",
        "from nltk.corpus import stopwords\n",
        "from nltk.stem import WordNetLemmatizer\n",
        "import nltk\n",
        "import string\n",
        "\n",
        "nltk.download('punkt')\n",
        "nltk.download('stopwords')\n",
        "nltk.download('wordnet')\n",
        "\n",
        "\n",
        "\n",
        "def perform_stemming(sentence):\n",
        "    ps = PorterStemmer()\n",
        "    words = word_tokenize(sentence)\n",
        "    stemmed_words = [ps.stem(word) for word in words if word.lower() not in stopwords.words('english')]\n",
        "    return ' '.join(stemmed_words)\n",
        "\n",
        "def perform_lemmatization(sentence):\n",
        "    lemmatizer = WordNetLemmatizer()\n",
        "    words = word_tokenize(sentence)\n",
        "    lemmatized_words = [lemmatizer.lemmatize(word) for word in words if word.lower() not in stopwords.words('english')]\n",
        "    return ' '.join(lemmatized_words)\n",
        "\n",
        "def preprocess_text(text):\n",
        "    text = text.translate(str.maketrans('', '', string.punctuation))\n",
        "    text = text.lower()\n",
        "    return text\n"
      ],
      "metadata": {
        "id": "zD6zyKesOL-V",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d9663d3d-4724-4d02-cf4f-c5fd37e47c4e"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[nltk_data] Downloading package punkt to /root/nltk_data...\n",
            "[nltk_data]   Unzipping tokenizers/punkt.zip.\n",
            "[nltk_data] Downloading package stopwords to /root/nltk_data...\n",
            "[nltk_data]   Unzipping corpora/stopwords.zip.\n",
            "[nltk_data] Downloading package wordnet to /root/nltk_data...\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "train_df['comment_text'] = train_df['comment_text'].apply(preprocess_text).apply(perform_stemming).apply(perform_lemmatization)\n",
        "train_df"
      ],
      "metadata": {
        "id": "O72K9JAVGivx",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "47a91f83-314f-4ebd-fc03-e961c9d84b24"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   id                                       comment_text  \\\n",
              "0    0000997932d777bf  explan edit made usernam hardcor metallica fan...   \n",
              "1    000103f0d9cfb60f  daww match background colour im seemingli stuc...   \n",
              "2    000113f07ec002fd  hey man im realli tri edit war guy constantli ...   \n",
              "3    0001b41b1c6bb37e  cant make real suggest improv wonder section s...   \n",
              "4    0001d958c54c6e35                         sir hero chanc rememb page   \n",
              "..                ...                                                ...   \n",
              "495  014b44616d8cb457  sarek vulcan unfortun ban fact sarek vulcan un...   \n",
              "496  014bb932bd289352  keep chin darwin accept overnight appear sen a...   \n",
              "497  014c96f873db11ff            nazi filth impolit 0427 20 jan 2004 utc   \n",
              "498  014d00c8f2a76df4  interest check case number kunzang lhamo cite ...   \n",
              "499  014f50b1f448cb2d  transclud part ga review doesnt seem updat mai...   \n",
              "\n",
              "     toxic  severe_toxic  obscene  threat  insult  identity_hate  \n",
              "0        0             0        0       0       0              0  \n",
              "1        0             0        0       0       0              0  \n",
              "2        0             0        0       0       0              0  \n",
              "3        0             0        0       0       0              0  \n",
              "4        0             0        0       0       0              0  \n",
              "..     ...           ...      ...     ...     ...            ...  \n",
              "495      0             0        0       0       0              0  \n",
              "496      0             0        0       0       0              0  \n",
              "497      1             0        0       0       1              0  \n",
              "498      0             0        0       0       0              0  \n",
              "499      0             0        0       0       0              0  \n",
              "\n",
              "[500 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-470d430c-b88b-4cf0-b80f-0f52f6cd31ec\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>comment_text</th>\n",
              "      <th>toxic</th>\n",
              "      <th>severe_toxic</th>\n",
              "      <th>obscene</th>\n",
              "      <th>threat</th>\n",
              "      <th>insult</th>\n",
              "      <th>identity_hate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0000997932d777bf</td>\n",
              "      <td>explan edit made usernam hardcor metallica fan...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>000103f0d9cfb60f</td>\n",
              "      <td>daww match background colour im seemingli stuc...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>000113f07ec002fd</td>\n",
              "      <td>hey man im realli tri edit war guy constantli ...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0001b41b1c6bb37e</td>\n",
              "      <td>cant make real suggest improv wonder section s...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0001d958c54c6e35</td>\n",
              "      <td>sir hero chanc rememb page</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>495</th>\n",
              "      <td>014b44616d8cb457</td>\n",
              "      <td>sarek vulcan unfortun ban fact sarek vulcan un...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>496</th>\n",
              "      <td>014bb932bd289352</td>\n",
              "      <td>keep chin darwin accept overnight appear sen a...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>497</th>\n",
              "      <td>014c96f873db11ff</td>\n",
              "      <td>nazi filth impolit 0427 20 jan 2004 utc</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>498</th>\n",
              "      <td>014d00c8f2a76df4</td>\n",
              "      <td>interest check case number kunzang lhamo cite ...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>499</th>\n",
              "      <td>014f50b1f448cb2d</td>\n",
              "      <td>transclud part ga review doesnt seem updat mai...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>500 rows × 8 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-470d430c-b88b-4cf0-b80f-0f52f6cd31ec')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-470d430c-b88b-4cf0-b80f-0f52f6cd31ec button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-470d430c-b88b-4cf0-b80f-0f52f6cd31ec');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8259b401-ee47-4172-8e4d-d533b97be5ba\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8259b401-ee47-4172-8e4d-d533b97be5ba')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8259b401-ee47-4172-8e4d-d533b97be5ba button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "train_df",
              "summary": "{\n  \"name\": \"train_df\",\n  \"rows\": 500,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 500,\n        \"samples\": [\n          \"00e729fdd5dbb85b\",\n          \"002c9cccf2f1d05b\",\n          \"00ef2984561935dc\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"comment_text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 500,\n        \"samples\": [\n          \"histori someon provid inform regard contract ac servic area ac transit use serv citi 680 corridor citi basic kick ac transit run servic part reason ac transit underserv suburb spend money underutil servic urban area histori reflect articl talk\",\n          \"ambigu mabuska irish mean one thing qout thank \\u2014 preced unsign comment ad 1097758139 cours word irish wasnt invent establish irish free state talk quot want depend context term use whether applic note said citizenship ethnic never mention nation real key mean nation mean term predominantli use form wikipedia nation term refer republ ireland alreadi know im sure talk nation term refer republ ireland countri nation term refer ireland \\u2014 preced unsign comment ad 10976191188 oh wow ireland ireland state whose offici descript republ ireland point inan convers talk ireland whose offici name ireland \\u2014 preced unsign comment ad 10976191188 httpwwwconstitutioniereportsconstitutionofirelandpdf read also see httpwwwconstitutioniereportsmbunreachtnaheireannpdf speak \\u2014 preced unsign comment ad 1097822450\",\n          \"ok peer view 12 month publish academ archiv onlin diva perman uri urnnbnsekaudiva2790 wallin h 2008 129 p investig friction graph rank abil regard gall phenomenon dri sof contact adhes materi transfer friction free pdf document avail wwwdivaportalorg found wwwuppsoklibriskbs use search wordsgal harald wallin direct libri link\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"toxic\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"severe_toxic\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"obscene\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"threat\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"insult\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"identity_hate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "test_df['comment_text'] = test_df['comment_text'].apply(preprocess_text).apply(perform_stemming).apply(perform_lemmatization)\n",
        "test_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "dNRPpmJhaHYI",
        "outputId": "5d7cc3c7-b626-4b0c-a8b5-fe2b543aaec2"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  id                                       comment_text\n",
              "0   00001cee341fdb12  yo bitch ja rule succes youll ever hate sad mo...\n",
              "1   0000247867823ef7                                  rfc titl fine imo\n",
              "2   00013b17ad220c46                         sourc zaw ashton lapland —\n",
              "3   00017563c3f7919a  look back sourc inform updat correct form gues...\n",
              "4   00017695ad8997eb                            dont anonym edit articl\n",
              "5   0001ea8717f6de06  thank understand think highli would revert wit...\n",
              "6   00024115d4cbde0f  plea add nonsens wikipedia edit consid vandal ...\n",
              "7   000247e83dcc1211                              dear god site horribl\n",
              "8   00025358d4737918  fool believ number correct number lie 10 000 1...\n",
              "9   00026d1092fe71cc  doubl redirect fix doubl redirect dont blank o...\n",
              "10  0002eadc3b301559  think crap link roggenbi articl somebodi know ...\n",
              "11  0002f87b16116a7f  somebodi invari tri add religion realli mean w...\n",
              "12  0003806b11932181  25 februari 2010 utc look clear ban sockpuppet...\n",
              "13  0003e1cccfd5a40a  say right type type institut need case three l...\n",
              "14  00059ace3e3e9a53  ad new product list make sure relev ad new pro...\n",
              "15  000634272d0d44eb  current posit anyon confirm sir alfr longer ai...\n",
              "16  000663aff0fffc80                                           one 1897\n",
              "17  000689dd34e20979  reason ban throw articl need section throw ban...\n",
              "18  000834769115370c  wallamoos chang cite materi say thing origin s...\n",
              "19  000844b52dee5f3f                               block edit wikipedia"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-18491779-927c-4546-968f-7959ae9679b3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>comment_text</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>00001cee341fdb12</td>\n",
              "      <td>yo bitch ja rule succes youll ever hate sad mo...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0000247867823ef7</td>\n",
              "      <td>rfc titl fine imo</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>00013b17ad220c46</td>\n",
              "      <td>sourc zaw ashton lapland —</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>00017563c3f7919a</td>\n",
              "      <td>look back sourc inform updat correct form gues...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>00017695ad8997eb</td>\n",
              "      <td>dont anonym edit articl</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>0001ea8717f6de06</td>\n",
              "      <td>thank understand think highli would revert wit...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>00024115d4cbde0f</td>\n",
              "      <td>plea add nonsens wikipedia edit consid vandal ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>000247e83dcc1211</td>\n",
              "      <td>dear god site horribl</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>00025358d4737918</td>\n",
              "      <td>fool believ number correct number lie 10 000 1...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>00026d1092fe71cc</td>\n",
              "      <td>doubl redirect fix doubl redirect dont blank o...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>0002eadc3b301559</td>\n",
              "      <td>think crap link roggenbi articl somebodi know ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>0002f87b16116a7f</td>\n",
              "      <td>somebodi invari tri add religion realli mean w...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>0003806b11932181</td>\n",
              "      <td>25 februari 2010 utc look clear ban sockpuppet...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>0003e1cccfd5a40a</td>\n",
              "      <td>say right type type institut need case three l...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>00059ace3e3e9a53</td>\n",
              "      <td>ad new product list make sure relev ad new pro...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>000634272d0d44eb</td>\n",
              "      <td>current posit anyon confirm sir alfr longer ai...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>000663aff0fffc80</td>\n",
              "      <td>one 1897</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>000689dd34e20979</td>\n",
              "      <td>reason ban throw articl need section throw ban...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>000834769115370c</td>\n",
              "      <td>wallamoos chang cite materi say thing origin s...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>000844b52dee5f3f</td>\n",
              "      <td>block edit wikipedia</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-18491779-927c-4546-968f-7959ae9679b3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-18491779-927c-4546-968f-7959ae9679b3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-18491779-927c-4546-968f-7959ae9679b3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-bb9ae0e6-501e-40da-b891-c8facb9eb290\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bb9ae0e6-501e-40da-b891-c8facb9eb290')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-bb9ae0e6-501e-40da-b891-c8facb9eb290 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "test_df",
              "summary": "{\n  \"name\": \"test_df\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"00001cee341fdb12\",\n          \"000689dd34e20979\",\n          \"000634272d0d44eb\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"comment_text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"yo bitch ja rule succes youll ever hate sad mofuckasi bitch slap ur pethed white face get kiss as guy sicken ja rule pride da music man dont dis shit nothin wrong bein like tupac brother toofuckin white boy get thing right next time\",\n          \"reason ban throw articl need section throw ban moment noncricket fan seem kind arbitrari\",\n          \"current posit anyon confirm sir alfr longer airport hospitalis\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# PROVE FINALI EMBEDDING + CLS  con BERT BASE"
      ],
      "metadata": {
        "id": "2xJsi7w1TQbS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from transformers import BertTokenizer, BertModel\n",
        "import torch\n",
        "import pandas as pd\n",
        "\n",
        "def get_emb_cls_function(df, column_name, model):\n",
        "\n",
        "    sentences = df[column_name].tolist()\n",
        "\n",
        "    inputs = tokenizer(sentences, return_tensors=\"pt\", padding=True, truncation=True)  #, max_length=25\n",
        "\n",
        "    with torch.no_grad():\n",
        "        outputs = model(**inputs)\n",
        "\n",
        "    hidden_states = outputs.last_hidden_state\n",
        "\n",
        "    embeddings_words = hidden_states[:, 1:-1, :]   #(ignora [CLS] e [SEP])\n",
        "    embedding_cls = hidden_states[:, 0, :]\n",
        "\n",
        "    return embeddings_words, embedding_cls\n",
        "\n",
        "\n",
        "\n",
        "model_name = 'bert-base-uncased'\n",
        "tokenizer = BertTokenizer.from_pretrained(model_name)\n",
        "model = BertModel.from_pretrained(model_name)\n",
        "\n",
        "\n",
        "embeddings_words, embedding_cls = get_emb_cls_function(test_df, \"comment_text\", model)\n",
        "\n",
        "\n",
        "print(\"Shape of BERT embeddings:\", embeddings_words.shape)\n",
        "print(\"Shape of CLS embeddings:\", embedding_cls.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "afSf2nzgTHfR",
        "outputId": "32f1453a-0501-467a-d7ae-71d732d4c3af"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Shape of BERT embeddings: torch.Size([20, 83, 768])\n",
            "Shape of CLS embeddings: torch.Size([20, 768])\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "embedding_cls"
      ],
      "metadata": {
        "id": "o_GC0Yu4THkr",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f37de68d-d1ee-45c4-978a-e926d0cbc783"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "tensor([[-0.1836,  0.0848,  0.1434,  ..., -0.5020,  0.1190,  0.0803],\n",
              "        [-0.3886, -0.0515, -0.0818,  ..., -0.3651,  0.0122,  0.8580],\n",
              "        [-0.4467,  0.0859, -0.1085,  ..., -0.1133,  0.2209,  0.1399],\n",
              "        ...,\n",
              "        [-0.3133,  0.0497, -0.0674,  ..., -0.3999,  0.0056,  0.6582],\n",
              "        [-0.3529,  0.1946,  0.0863,  ..., -0.3865,  0.1441,  0.7291],\n",
              "        [-0.2416,  0.3153, -0.2815,  ..., -0.3865,  0.1559,  0.8678]])"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "embeddings_words"
      ],
      "metadata": {
        "id": "CPRvdADrTHnq",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "eb293ba2-51c1-44ec-8af9-2846b0fb19cd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "tensor([[[ 1.8235e-02,  1.2101e+00,  1.1655e+00,  ..., -2.7773e-01,\n",
              "           1.5651e-01,  4.2157e-01],\n",
              "         [ 7.2710e-01,  9.7420e-02,  8.5378e-01,  ..., -2.3494e-01,\n",
              "          -1.6997e-01, -4.8060e-01],\n",
              "         [-1.1149e-01,  1.4217e-01,  1.2018e+00,  ...,  7.5976e-02,\n",
              "           4.8705e-01,  1.6720e-01],\n",
              "         ...,\n",
              "         [-1.5349e-01, -3.6872e-02,  5.3322e-01,  ..., -3.6372e-01,\n",
              "          -3.4358e-02,  4.4332e-02],\n",
              "         [-1.6261e-01, -1.3936e-02,  5.7683e-01,  ..., -3.6117e-01,\n",
              "          -1.8872e-02, -9.5240e-02],\n",
              "         [-1.9408e-01,  7.6614e-02,  5.7549e-01,  ..., -2.1981e-01,\n",
              "          -2.3856e-02, -1.8084e-01]],\n",
              "\n",
              "        [[ 6.9830e-01, -6.4417e-03, -2.1427e-02,  ...,  3.5786e-03,\n",
              "           3.8907e-01,  8.8160e-01],\n",
              "         [ 9.0319e-01, -1.8488e-01,  7.7288e-01,  ..., -2.6254e-01,\n",
              "           6.7586e-01,  8.8700e-01],\n",
              "         [-5.5392e-01,  1.8747e-01,  3.1975e-01,  ..., -9.0675e-02,\n",
              "          -6.0709e-01, -1.8638e-01],\n",
              "         ...,\n",
              "         [ 2.1488e-01,  2.8258e-02,  1.9860e-01,  ..., -3.2685e-02,\n",
              "           4.3645e-02,  5.3804e-01],\n",
              "         [ 2.1114e-01,  6.9096e-02,  2.4658e-01,  ..., -3.9520e-02,\n",
              "           2.8106e-03,  5.4130e-01],\n",
              "         [ 2.1962e-01,  7.0180e-02,  2.4471e-01,  ..., -1.2980e-02,\n",
              "          -1.2928e-02,  5.0336e-01]],\n",
              "\n",
              "        [[-8.3986e-04,  1.2925e-01,  2.0813e-01,  ..., -1.4897e-01,\n",
              "           1.0150e-01,  1.6913e-01],\n",
              "         [ 8.3737e-02, -9.7450e-04,  1.0913e-01,  ..., -2.7007e-01,\n",
              "          -1.4574e-02,  3.8268e-01],\n",
              "         [-5.6512e-03, -4.0031e-01, -2.1623e-01,  ..., -4.0446e-01,\n",
              "           7.5539e-01,  8.7068e-01],\n",
              "         ...,\n",
              "         [-8.7901e-02,  1.9399e-01,  4.5202e-02,  ...,  3.7139e-02,\n",
              "           2.0865e-01,  1.3273e-01],\n",
              "         [-1.6199e-01,  5.0145e-02,  1.7913e-01,  ...,  5.5324e-03,\n",
              "           2.2546e-01,  2.5802e-01],\n",
              "         [-1.4542e-01,  1.4997e-01,  1.1443e-01,  ...,  8.3305e-02,\n",
              "           2.3193e-01,  1.0838e-01]],\n",
              "\n",
              "        ...,\n",
              "\n",
              "        [[-1.6043e-01,  1.1061e-01,  2.1231e-01,  ...,  2.9275e-02,\n",
              "           9.1466e-02,  3.6342e-01],\n",
              "         [ 4.9255e-01, -3.1996e-01,  1.4353e-01,  ..., -1.5643e-02,\n",
              "          -3.0532e-01, -4.4223e-01],\n",
              "         [ 2.5270e-01,  3.0858e-01,  3.9546e-02,  ..., -2.3590e-01,\n",
              "          -4.0350e-01, -3.0205e-01],\n",
              "         ...,\n",
              "         [-1.4367e-01, -4.3857e-01,  1.5141e-01,  ..., -1.8427e-01,\n",
              "          -1.1188e-01, -6.2810e-02],\n",
              "         [-1.3859e-01, -6.4412e-01,  1.5608e-02,  ..., -1.7327e-01,\n",
              "          -1.5286e-01, -1.2534e-01],\n",
              "         [-7.1733e-02, -2.8330e-01,  2.8996e-01,  ..., -1.7558e-01,\n",
              "          -1.3056e-01, -3.0004e-02]],\n",
              "\n",
              "        [[-2.9734e-01, -8.9471e-02,  1.0771e-01,  ..., -6.4711e-02,\n",
              "          -1.3627e-01, -1.5993e-01],\n",
              "         [ 1.1120e-01,  8.6928e-01,  5.8391e-02,  ...,  4.1813e-01,\n",
              "           1.1246e-01,  2.0881e-01],\n",
              "         [-4.6869e-01,  1.9738e-01,  5.3939e-01,  ..., -2.1471e-01,\n",
              "          -1.3511e-01,  1.9667e-01],\n",
              "         ...,\n",
              "         [-4.5593e-02, -2.1255e-01,  3.8429e-01,  ..., -2.6728e-01,\n",
              "          -1.8927e-02,  2.1636e-01],\n",
              "         [-1.7433e-01, -2.8878e-01,  4.4453e-01,  ..., -2.5385e-01,\n",
              "          -2.8795e-02,  3.4486e-01],\n",
              "         [-3.2948e-01, -2.1492e-01,  6.4365e-01,  ..., -2.9969e-01,\n",
              "          -2.4969e-02,  1.8775e-01]],\n",
              "\n",
              "        [[ 4.9797e-01,  2.3370e-01, -8.6516e-02,  ...,  1.2994e-01,\n",
              "           1.1001e-01,  4.6262e-01],\n",
              "         [ 1.0244e+00,  8.2120e-01,  3.6049e-01,  ..., -7.3603e-02,\n",
              "          -1.9659e-03,  3.0392e-01],\n",
              "         [ 4.9161e-01,  1.0207e+00, -1.6248e-01,  ..., -7.9572e-01,\n",
              "           1.6080e-01, -2.0560e-02],\n",
              "         ...,\n",
              "         [ 7.9815e-02,  1.4107e-01,  9.7590e-02,  ..., -7.5758e-02,\n",
              "           1.2634e-01,  2.9657e-01],\n",
              "         [-3.2240e-01, -3.3228e-01, -2.0498e-01,  ..., -3.0310e-01,\n",
              "           5.6060e-02,  4.3385e-01],\n",
              "         [-3.9808e-03, -1.5561e-01,  7.7069e-03,  ..., -1.6482e-01,\n",
              "           2.8826e-02,  3.0059e-01]]])"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Fine Tuning BERT"
      ],
      "metadata": {
        "id": "2sBna2VRIjb3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import torch\n",
        "import numpy as np\n",
        "from transformers import BertTokenizer, BertForSequenceClassification, AdamW\n",
        "from torch.utils.data import DataLoader, TensorDataset, random_split\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import accuracy_score, classification_report\n",
        "from tqdm import tqdm\n",
        "\n",
        "\n",
        "# Load data and convert labels into tensors\n",
        "train_texts = train_df['comment_text'].values\n",
        "train_labels = train_df[['toxic', 'severe_toxic', 'obscene', 'threat', 'insult', 'identity_hate']].values\n",
        "\n",
        "\n",
        "# Load the tokenizer and BERT's pre-trained model\n",
        "tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n",
        "model = BertForSequenceClassification.from_pretrained('bert-base-uncased', num_labels=6)\n",
        "\n",
        "# Tokenise texts and convert to tensors\n",
        "train_encodings = tokenizer(train_texts.tolist(), truncation=True, padding=True, max_length=128, return_tensors='pt')\n",
        "\n",
        "# Creating tensors for labels\n",
        "train_labels = torch.tensor(train_labels, dtype=torch.float32)\n",
        "\n",
        "# Creation of DataLoader to manage data during training and validation\n",
        "train_dataset = TensorDataset(train_encodings['input_ids'], train_encodings['attention_mask'], train_labels)\n",
        "\n",
        "# Creation of DataLoader to manage data during training and validation\n",
        "train_loader = DataLoader(train_dataset, batch_size=16, shuffle=True)\n",
        "\n",
        "\n",
        "# parameters\n",
        "optimizer = AdamW(model.parameters(), lr=2e-5)\n",
        "\n",
        "device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n",
        "model.to(device)\n",
        "\n",
        "# training model\n",
        "num_epochs = 3\n",
        "for epoch in range(num_epochs):\n",
        "\n",
        "    # Training phase\n",
        "    model.train()\n",
        "    for batch in tqdm(train_loader, desc=f'Epoch {epoch + 1}/{num_epochs} - Training'):\n",
        "        input_ids, attention_mask, labels = batch\n",
        "        input_ids, attention_mask, labels = input_ids.to(device), attention_mask.to(device), labels.to(device)\n",
        "\n",
        "        optimizer.zero_grad()\n",
        "\n",
        "        outputs = model(input_ids, attention_mask=attention_mask, labels=labels)\n",
        "        loss = outputs.loss\n",
        "        loss.backward()\n",
        "\n",
        "        optimizer.step()\n",
        "\n",
        "# save the model\n",
        "model.save_pretrained(\"bert_sequence_classification_trained\")\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "6XeIPWUcTGFh",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fdda86e1-a174-4124-c440-8cefa92a17fd"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n",
            "/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:429: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning\n",
            "  warnings.warn(\n",
            "Epoch 1/3 - Training: 100%|██████████| 32/32 [00:09<00:00,  3.32it/s]\n",
            "Epoch 2/3 - Training: 100%|██████████| 32/32 [00:09<00:00,  3.30it/s]\n",
            "Epoch 3/3 - Training: 100%|██████████| 32/32 [00:09<00:00,  3.26it/s]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# PROVE FINALI EMBEDDING + CLS  con BERT ALLENATO"
      ],
      "metadata": {
        "id": "8Mll6mgz1IaA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from transformers import BertTokenizer, BertModel\n",
        "import torch\n",
        "import pandas as pd\n",
        "\n",
        "def get_emb_cls_function_trained(df, column_name, model):\n",
        "\n",
        "    sentences = df[column_name].tolist()\n",
        "\n",
        "    inputs = tokenizer(sentences, return_tensors=\"pt\", padding=True, truncation=True,  max_length=256)  #, max_length=25\n",
        "\n",
        "    with torch.no_grad():\n",
        "        # Ottenere l'output del modello\n",
        "        outputs = model.bert(**inputs)\n",
        "\n",
        "    last_hidden_state = outputs.last_hidden_state\n",
        "\n",
        "    embeddings_words = last_hidden_state[:, 1:-1, :]   #(ignora [CLS] e [SEP])\n",
        "    embedding_cls = last_hidden_state[:, 0, :]\n",
        "\n",
        "    return embeddings_words, embedding_cls\n",
        "\n",
        "# Tokenizzazione del testo\n",
        "tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n",
        "\n",
        "# Caricare il modello addestrato\n",
        "model = BertForSequenceClassification.from_pretrained('bert_sequence_classification_trained')\n",
        "embeddings_words, embedding_cls = get_emb_cls_function_trained(test_df, \"comment_text\", model)\n",
        "\n",
        "\n",
        "print(\"Shape of BERT embeddings:\", embeddings_words.shape)\n",
        "print(\"Shape of CLS embeddings:\", embedding_cls.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "a032z4PoyBQe",
        "outputId": "fd2e9b52-3629-406b-b2af-30001c7ba3e9"
      },
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Shape of BERT embeddings: torch.Size([20, 83, 768])\n",
            "Shape of CLS embeddings: torch.Size([20, 768])\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "embeddings_words"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Bs-5lkzZyBav",
        "outputId": "d712bcb4-3c1c-4d40-b9b1-8b86936762f5"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "tensor([[[ 0.7734,  0.1186,  0.8666,  ..., -0.5607,  0.3785, -0.3139],\n",
              "         [ 0.7085, -0.2697,  0.6988,  ..., -0.4239, -0.3197, -0.9547],\n",
              "         [ 0.9989, -0.2993,  1.1960,  ..., -0.7202,  0.0069, -0.2807],\n",
              "         ...,\n",
              "         [ 0.3777, -0.3852,  0.9299,  ..., -0.6548, -0.4189, -0.1393],\n",
              "         [ 0.3614, -0.4148,  0.9415,  ..., -0.5963, -0.4332, -0.0887],\n",
              "         [ 0.3190, -0.3851,  0.9420,  ..., -0.5510, -0.3693, -0.0918]],\n",
              "\n",
              "        [[ 0.6376, -0.9624,  0.8345,  ..., -0.0424, -0.7418,  0.4462],\n",
              "         [ 0.6345, -1.1623,  0.8519,  ..., -0.2526, -0.0971,  0.8350],\n",
              "         [ 0.2410, -1.0531,  0.9291,  ..., -0.2191, -0.8526,  0.3320],\n",
              "         ...,\n",
              "         [ 0.2157, -1.0723,  0.5633,  ..., -0.2131, -0.7494,  0.4370],\n",
              "         [ 0.2372, -1.0382,  0.6094,  ..., -0.2428, -0.7733,  0.4407],\n",
              "         [ 0.2368, -0.9895,  0.5995,  ..., -0.2466, -0.7533,  0.4120]],\n",
              "\n",
              "        [[ 0.0593, -1.3522,  1.0994,  ..., -0.3132, -0.5537, -0.1253],\n",
              "         [ 0.2228, -1.0121,  0.8748,  ..., -0.3117, -0.9375,  0.1234],\n",
              "         [ 0.3304, -1.2761,  0.8540,  ..., -0.3053, -0.7063,  0.3427],\n",
              "         ...,\n",
              "         [-0.0114, -1.0220,  0.4174,  ..., -0.2788, -0.7977,  0.2927],\n",
              "         [-0.0063, -1.0720,  0.4573,  ..., -0.2244, -0.6894,  0.3099],\n",
              "         [ 0.0102, -1.0442,  0.4393,  ..., -0.2434, -0.7138,  0.2512]],\n",
              "\n",
              "        ...,\n",
              "\n",
              "        [[ 0.1528, -0.9954,  0.7612,  ..., -0.0563, -0.8546,  0.3617],\n",
              "         [ 0.2804, -1.0486,  0.5945,  ..., -0.1939, -0.8580,  0.1137],\n",
              "         [ 0.3836, -0.8870,  0.6629,  ..., -0.1751, -0.8225,  0.2436],\n",
              "         ...,\n",
              "         [ 0.0704, -1.1154,  0.4395,  ..., -0.2785, -0.7710,  0.3019],\n",
              "         [ 0.0899, -1.1429,  0.4541,  ..., -0.2942, -0.7883,  0.3040],\n",
              "         [ 0.1090, -1.0728,  0.4600,  ..., -0.2655, -0.7753,  0.2962]],\n",
              "\n",
              "        [[ 0.1820, -1.2214,  0.9113,  ..., -0.1619, -0.6869,  0.1469],\n",
              "         [ 0.2354, -1.0669,  0.6925,  ..., -0.1311, -0.4186,  0.1783],\n",
              "         [ 0.2706, -1.0005,  0.8853,  ..., -0.2670, -0.8419,  0.2303],\n",
              "         ...,\n",
              "         [ 0.2123, -1.1058,  0.4950,  ..., -0.2360, -0.8103,  0.2335],\n",
              "         [ 0.2055, -1.1031,  0.4770,  ..., -0.2679, -0.8065,  0.2226],\n",
              "         [ 0.1771, -1.1056,  0.4637,  ..., -0.1996, -0.7352,  0.2274]],\n",
              "\n",
              "        [[ 0.3544, -0.6709,  0.7850,  ..., -0.1273, -1.0012,  0.2153],\n",
              "         [ 0.6254, -0.6338,  0.7873,  ..., -0.2584, -0.9962,  0.5352],\n",
              "         [ 0.4051, -0.4079,  0.8591,  ..., -0.1549, -1.1796,  0.4953],\n",
              "         ...,\n",
              "         [-0.0220, -0.8969,  0.4456,  ..., -0.3001, -0.7409,  0.4671],\n",
              "         [-0.1354, -0.9805,  0.3776,  ..., -0.3357, -0.9115,  0.5540],\n",
              "         [-0.0846, -0.9394,  0.3536,  ..., -0.3192, -0.9100,  0.5232]]])"
            ]
          },
          "metadata": {},
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "embedding_cls"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0Z5Oii7azRzr",
        "outputId": "a93796b6-9121-4e4c-cc66-a97e0a1e0d17"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "tensor([[-0.3841, -0.3144,  0.4098,  ..., -0.3098, -0.2039, -0.0711],\n",
              "        [-0.0711, -0.8446,  0.8575,  ..., -0.0055, -0.7990,  0.5751],\n",
              "        [-0.2888, -0.8517,  0.7608,  ..., -0.2555, -0.8573,  0.3615],\n",
              "        ...,\n",
              "        [-0.0360, -0.8963,  0.7042,  ..., -0.1088, -0.6927,  0.4856],\n",
              "        [ 0.0494, -0.9139,  0.7598,  ..., -0.0904, -0.7338,  0.3916],\n",
              "        [ 0.0036, -0.8199,  0.8795,  ..., -0.2455, -0.8923,  0.8674]])"
            ]
          },
          "metadata": {},
          "execution_count": 56
        }
      ]
    }
  ]
}